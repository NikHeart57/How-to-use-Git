		Создание репозитория и первый коммит
1. В папке с проектом кликаем правой кнопкой мыши и нажимаем "Git Bash Here"
2. Создаем пустой репозиторий командой "git init"
3. Узнаем статус рабочей ветки репозитория командой "git status"
   (по умолчанию ветка называется "master")
   3.1. По желанию переименовываем ветку "master" в "main" для этого пишем команду "git branch -M main"
4. Добавляем все файлы проекта в индексацию ветки командой "git add ."
5. Еще раз узнаем статус рабочей ветки репозитория командой "git status" 
   если все выполнено правильно то статус покажет, что есть изменения и файлы готовы к коммиту
6. Делаем коммит командой "git commit -m "Обязательный комментарий к коммиту""


		Второй и последующие коммиты
1. Узнаем статус рабочей ветки репозитория командой "git status"
2. Добавляем все файлы проекта в индексацию ветки командой "git add ."
3. Делаем коммит командой "git commit -m "Обязательный комментарий к коммиту""

		
		Создание репозитория на гитхаб и пуш первого коммита
0. Перед тем как пушить коммит на гитхаб нужно создать репозиторий на гитхабе. Для этого:
   0.1. Заходим на гитхаб
   0.2. Жмем на кнопку "New" и создаем новый репозиторий. 
        Лучше чтобы завнвание репозитория и название папки с проектом были одинаковыми
1. Привязываем удаленный репозиторий командой "git remote add origin https://github.com/%Название аккаунта%/%Название репозитория%"
2. Пушим коммит в удаленный репозиторий командой "git push -u origin %Название ветки%"


		Пуш второго и последующего коммитов на гитхаб
1. Узнаем статус рабочей ветки репозитория командой "git status"
2. Добавляем все файлы проекта в индексацию ветки командой "git add ."
3. Делаем коммит командой "git commit -m "Обязательный комментарий к коммиту""
4. Пушим коммит в удаленный репозиторий командой "git push -u origin %Название ветки%"

		Комадны для работы с ветками
* Список веток: 				git branch или git branch --list
* Создать ветку: 				git branch %Название новой ветки%
* Переименование текущей активной ветки 	git branch -M main
* Переход между ветками: 			git switch %Название ветки на которую переходишь%
* Удалить ветку: 				git branch -d %Название удаляемой ветки%  		(Нельзя удалить активную ветку!)
* Слияние целевой ветки с активной 
  в данный момент веткой: 			git merge %Название целевой ветки%
